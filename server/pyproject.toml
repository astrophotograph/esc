[project]
name = "smarttel"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "aiosqlite>=0.21.0",
    "aiortc>=1.9.0",
    "async-timeout>=5.0.1",
    "beartype>=0.21.0",
    "click>=8.2.0",
    "fastapi>=0.115.12",
    "fastapi-restful[all]>=0.6.0",
    "httpx[brotli,http2,zstd]>=0.28.1",
    "loguru>=0.7.3",
    "netifaces>=0.11.0",
    "numpy>=2.3.0",
    "opencv-python>=4.11.0.86",
    "pydantic>=2.11.4",
    "pydash>=8.0.5",
    "scikit-image>=0.25.2",
    "uvicorn[standard]>=0.34.3",
    "websockets>=13.1",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.0.0",
    "numpy-typing>=1.1.1",
    "starplot>=0.9.0",
    "onnxruntime>=1.22.1",
    "appdirs>=1.4.4",
    "minio>=7.2.15",
    "sc-pylibs>=0.0.0.1",
    "customtkinter>=5.2.2",
    "localization>=0.1.7",
    "python-multipart>=0.0.20",
    "astropy>=7.1.0",
    "torch>=2.7.1",
    "torchvision>=0.22.1",
    "pywavelets>=1.8.0",
    "opencv-contrib-python>=4.11.0.86",
    "packaging>=25.0",
    "tzlocal>=5.3.1",
]

[tool.pytest.ini_options]
testpaths = [".", "tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=.",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["."]
omit = [
    "test_*.py",
    "*_test.py",
    ".venv/*",
    "htmlcov/*",
    "build/*",
    "dist/*",
    "*.egg-info/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if False:",
]
